//
// GLMath - Swizzle.swift
//
// Copyright (c) 2016 The GLMath authors.
// Licensed under MIT License.

// NOTE:
// - Do NOT edit this file. Edit `Swizzle.swift.gyb` file instead.
// - Combinations of `s, t, u, v` are not implemented.

// TODO: Swizzle properties shall be settable.

public extension Vector2 {

    var r: Component { return self.x }
    var g: Component { return self.y }

    % for ms in [{"x", "y"}, {"r", "g"}]:
    %   for (xy, x, y) in [(x + y, x, y) for x in ms for y in ms]:
    var ${xy}: Self { return Self(self.${x}, self.${y}) }
    %   end
    % end
}

public extension Vector3 {
    var r: Component { return self.x }
    var g: Component { return self.y }
    var b: Component { return self.z }

    % for ms in [{"x", "y", "z"}, {"r", "g", "b"}]:
    %   for (xy, x, y) in [(x + y, x, y) for x in ms for y in ms]:
    var ${xy}: AssociatedVector2 { return AssociatedVector2(self.${x}, self.${y}) }
    %   end
    %   for (xyz, x, y, z) in [(x + y + z, x, y, z) for x in ms for y in ms for z in ms]:
    var ${xyz}: Self { return Self(self.${x}, self.${y}, self.${z}) }
    %   end
    % end
}

public extension Vector4 {
    var r: Component { return self.x }
    var g: Component { return self.y }
    var b: Component { return self.z }
    var a: Component { return self.w }

    % for ms in [{"x", "y", "z", "w"}, {"r", "g", "b", "a"}]:
    %   for (xy, x, y) in [(x + y, x, y) for x in ms for y in ms]:
    var ${xy}: AssociatedVector2 { return AssociatedVector2(self.${x}, self.${y}) }
    %   end
    %   for (xyz, x, y, z) in [(x + y + z, x, y, z) for x in ms for y in ms for z in ms]:
    var ${xyz}: AssociatedVector3 { return AssociatedVector3(self.${x}, self.${y}, self.${z}) }
    %   end
    %   for (xyzw, x, y, z, w) in [(x + y + z + w, x, y, z, w) for x in ms for y in ms for z in ms for w in ms]:
    var ${xyzw}: Self { return Self(self.${x}, self.${y}, self.${z}, self.${w}) }
    %   end
    % end
}
